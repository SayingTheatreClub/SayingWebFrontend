# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: React Deployment

on: [push]


jobs:

  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x]

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"

    - uses: actions/cache@v2
      id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-

    - name: Build package
      run: |
        yarn --non-interactive && yarn build
      env:
        CI: true
  
    - name: Copy file to server
      uses: wlixcc/SFTP-Deploy-Action@v1.0
      with:
        username: 'ubuntu'
        server: '${{ secrets.SERVER_IP }}'
        ssh_private_key: ${{ secrets.PRIVATE_KEY }}
        local_path: './build/*'
        remote_path: '/home/ubuntu/build'
        args: '-o ConnectTimeout=5'

    - name: Copy file to mobile server
      uses: wlixcc/SFTP-Deploy-Action@v1.0
      with:
        username: 'ubuntu'
        server: '${{ secrets.SERVER_IP }}'
        ssh_private_key: ${{ secrets.PRIVATE_KEY }}
        local_path: './*'
        remote_path: '/home/ubuntu/mobile'
        args: '-o ConnectTimeout=5'